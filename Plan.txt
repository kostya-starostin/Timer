-- НАЗВАНИЕ --
деМотиватор (или всё-таки Мотиватор?)


-- ИДЕЯ --
Приложение, которое позволяет пользователю составлять список событий с указнием времени исполнения
каждой из них и отслеживать наступление дедлайна. События можно добавлять, удалять, редактировать



-- ТРЕБОВАНИЯ --

1. Функционал
    - автозапуск при входе в систему
    - для десктопных ПК
    - кроссплатформенность (желательно)
    - таймер
    - список событий
    - одно событие основное (выбирается пользователем или по умолчанию - ближайшее)
    - отображение названия основного события, времени (дни, часы, минуты) до дедлайна - крупно, двух второстепенных - мелко
    - возможность просмотра и редактирования списка событий в отдельном окне (название, время, приоритет(?), комментарий)
    - возможность продления, подтверждения, отмены события
    - хранение списка событий и их свойств в xml-файле
    - хранение настроек в отдельном текстовом файле
    - при приближении дедлайна всплывающее сообщение (например, за 7, 3 и 1 день до)
    - при наступлении дедлайна происходит что-нибудь страшное

2. GUI
    - java swing
    - основная форма:
        - меню + hotkeys
        - панель с отображением таймера (времени до окончания события)
        - кнопки (отмена, продлить, выполнено (для основного события), добавить событие)
    - messageboxes
    - дополнительная форма:
        - список/таблица событий с возможностью редактирования
        - ok/cancel
    - что ещё?

3. Дополнительно:
    - подзадачи
    - виджет
    - инсталлер



-- РЕСУРСЫ --



-- ПЛАН --


Классы и их методы:
	- список событий:
		- добавить событие
		- завершить событие
		- отсрочить событие
		- изменить название
		- изменить приоритет
		- выбрать приоритет автоматически (если не выбран)
	- таймер:
		- запомнить время дедлайна
		- получить текущее системное время
		- рассчитать оставшееся время
	- xml-парсер:
		- перезаписать файл
		- преобразовать список в формат записи в xml
	- обработчик файлов:
		- выбрать файл
	- редактор настроек программы:
		- получить данные от пользователя
		- сохранить настройки
    
реализация
    1. uml диаграмма классов
    2. хранение данных (xml/file) + сразу для нескольких задач и подзадач
    3. консольная реализация
    4. ui

0.0.2
требования
    мультизадачность

реализация
    адаптация интерфейса для нескольких параллельных задач

0.0.3
    подзадачи
реализация

-- РИСКИ --

